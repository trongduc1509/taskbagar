-- Danh sách Table "TaskBagar"
--    . Bảng User
--    . Bảng Role
--    . Bảng Comment
--    . Bảng EmployeeInProject
--    . Bảng Project
--    . Bảng Users_Tasks
--    . Bảng Task
--    . Bảng File
--    . Bảng Customer
--    . Bảng Category
--    . Bảng LabelsInTask
--    . Bảng Status
--    . Bảng Label

CREATE TABLE IF NOT EXISTS public."Role"
(
    id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	role_name character varying(30),
    PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS public."User"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	username character varying(100),
	password character varying(30),
	email character varying(100),
	phone character varying(12),
	address character varying(100),
	name character varying(100),
	birthday DATE,
	role_id INTEGER,
	


    	PRIMARY KEY (id),
	CONSTRAINT username UNIQUE (username),
	CONSTRAINT fk_user_role FOREIGN KEY (role_id)
        REFERENCES public."Role" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS public."Customer"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	name CHARACTER VARYING(100),
	email CHARACTER VARYING(30),
	phone CHARACTER VARYING(12),
	
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Category"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	name CHARACTER VARYING(100),
	
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Label"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	name CHARACTER VARYING(100),
	
	PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS public."Status"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	name CHARACTER VARYING(100),
	
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Project"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	name character varying (100),
	customer_id INTEGER,
	category_id INTEGER,
	createdBy integer,
	startTime timestamp,
	endTime timestamp,
	description text,

   	 PRIMARY KEY (id),
	CONSTRAINT fk_project_customer FOREIGN KEY (customer_id) REFERENCES public."Customer" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_project_category FOREIGN KEY (category_id) REFERENCES public."Category" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_project_user FOREIGN KEY (createdBy) REFERENCES public."User" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public."Task"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	name character varying(30),
	project_id INTEGER,
	createdBy INTEGER,
	status_id INTEGER,
	startTime timestamp,
	endTime timestamp,
	description text,

	PRIMARY KEY (id),
	CONSTRAINT fk_task_project FOREIGN KEY (project_id) REFERENCES public."Project" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_task_status FOREIGN KEY (status_id) REFERENCES public."Status" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_task_user FOREIGN KEY (createdBy) REFERENCES public."User" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS public."LabelsInTask"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	task_id INTEGER,
	label_id INTEGER,
	
	PRIMARY KEY (id),
	CONSTRAINT fk_labelintask_label FOREIGN KEY (label_id) REFERENCES public."Label" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_labelintask_task FOREIGN KEY (task_id) REFERENCES public."Task" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public."Comment"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	user_id integer,
	task_id integer,
	content text,
	
	PRIMARY KEY (id),
	CONSTRAINT fk_comment_user FOREIGN KEY (user_id) REFERENCES public."User" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_comment_task FOREIGN KEY (task_id) REFERENCES public."Task" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS public."File"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	name CHARACTER VARYING(100),
	size integer,
	url text,
	task_id integer,

	PRIMARY KEY (id),
	CONSTRAINT fk_file_task FOREIGN KEY (task_id) REFERENCES public."Task" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS public."Users_Task"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	user_id integer,
	task_id integer,
	
	PRIMARY KEY (id),
	CONSTRAINT fk_userstask_user FOREIGN KEY (user_id) REFERENCES public."User" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_userstask_task FOREIGN KEY (task_id) REFERENCES public."Task" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public."EmployeeInTask"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	user_id integer,
	project_id integer,
	
	PRIMARY KEY (id),
	CONSTRAINT fk_employeeintask_user FOREIGN KEY (user_id) REFERENCES public."User" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_employeeintask_task FOREIGN KEY (project_id) REFERENCES public."Project" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

