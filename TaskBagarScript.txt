-- Danh sách Table "TaskBagar"
--    . Bảng User
--    . Bảng Role
--    . Bảng Comment
--    . Bảng EmployeeInProject
--    . Bảng Project
--    . Bảng Users_Tasks
--    . Bảng Task
--    . Bảng File
--    . Bảng Customer
--    . Bảng Category
--    . Bảng LabelsInTask
--    . Bảng Status
--    . Bảng Label

CREATE TABLE IF NOT EXISTS public."Role"
(
    id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	role_name character varying(30),
    PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS public."User"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	username character varying(100),
	password character varying(30),
	email character varying(100),
	phone character varying(12),
	address character varying(100),
	name character varying(100),
	birthday DATE,
	role_id INTEGER,
	


    	PRIMARY KEY (id),
	CONSTRAINT username UNIQUE (username),
	CONSTRAINT fk_user_role FOREIGN KEY (role_id)
        REFERENCES public."Role" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS public."Customer"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	name CHARACTER VARYING(100),
	email CHARACTER VARYING(30),
	phone CHARACTER VARYING(12),
	
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Category"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	name CHARACTER VARYING(100),
	
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Label"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	name CHARACTER VARYING(100),
	color CHARACTER VARYTIN(7),

	PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS public."Status"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	name CHARACTER VARYING(100),
	
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Project"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	name character varying (100),
	customer_id INTEGER,
	category_id INTEGER,
	createdBy integer,
	startTime timestamp,
	endTime timestamp,
	description text,

   	 PRIMARY KEY (id),
	CONSTRAINT fk_project_customer FOREIGN KEY (customer_id) REFERENCES public."Customer" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_project_category FOREIGN KEY (category_id) REFERENCES public."Category" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_project_user FOREIGN KEY (createdBy) REFERENCES public."User" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public."Task"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	name character varying(30),
	project_id INTEGER,
	createdBy INTEGER,
	status_id INTEGER,
	startTime timestamp,
	endTime timestamp,
	description text,

	PRIMARY KEY (id),
	CONSTRAINT fk_task_project FOREIGN KEY (project_id) REFERENCES public."Project" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_task_status FOREIGN KEY (status_id) REFERENCES public."Status" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_task_user FOREIGN KEY (createdBy) REFERENCES public."User" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS public."LabelsInTask"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	task_id INTEGER,
	label_id INTEGER,
	
	PRIMARY KEY (id),
	CONSTRAINT fk_labelintask_label FOREIGN KEY (label_id) REFERENCES public."Label" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_labelintask_task FOREIGN KEY (task_id) REFERENCES public."Task" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public."Comment"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	user_id integer,
	task_id integer,
	content text,
	
	PRIMARY KEY (id),
	CONSTRAINT fk_comment_user FOREIGN KEY (user_id) REFERENCES public."User" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_comment_task FOREIGN KEY (task_id) REFERENCES public."Task" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS public."File"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	name CHARACTER VARYING(100),
	size integer,
	url text,
	task_id integer,

	PRIMARY KEY (id),
	CONSTRAINT fk_file_task FOREIGN KEY (task_id) REFERENCES public."Task" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS public."Users_Task"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	user_id integer,
	task_id integer,
	
	PRIMARY KEY (id),
	CONSTRAINT fk_userstask_user FOREIGN KEY (user_id) REFERENCES public."User" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_userstask_task FOREIGN KEY (task_id) REFERENCES public."Task" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public."EmployeeInProject"
(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	user_id integer,
	project_id integer,
	
	PRIMARY KEY (id),
	CONSTRAINT fk_employeeintask_user FOREIGN KEY (user_id) REFERENCES public."User" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
	CONSTRAINT fk_employeeintask_task FOREIGN KEY (project_id) REFERENCES public."Project" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);
--EXAMPLES DATA
INSERT INTO public."Role"(
	id, role_name)
	VALUES (1, 'admin');
INSERT INTO public."Role"(
	id, role_name)
	VALUES (2, 'manager');
INSERT INTO public."Role"(
	id, role_name)
	VALUES (3, 'employee');

INSERT INTO public."User"(
	id, username, password, email, phone, address, name, birthday, role_id)
	VALUES (1, 'tmd', '1', 'manhduc2711@gmail.com', '0352266985', 'tp HCM', 'Trần Mạnh Đức', '27/11/2001', '1');
INSERT INTO public."User"(
	id, username, password, email, phone, address, name, birthday, role_id)
	VALUES (2, 'chs', '1', 'chs@gmail.com', '0352261985', 'tp HCM', 'Cao Hải Síl', '01/01/2001', '2');
INSERT INTO public."User"(
	id, username, password, email, phone, address, name, birthday, role_id)
	VALUES (3, 'ntd', '1', 'ntd@gmail.com', '0352266985', 'tp HCM', 'Ngô trọng Đức', '01/01/2001', '3');

INSERT INTO public."Customer"(
	id, name, email, phone)
	VALUES (1, 'VinGroup', 'vin@gmail.com', '0989999999');
INSERT INTO public."Customer"(
	id, name, email, phone)
	VALUES (2, 'FPT', 'fpt@gmail.com', '0979999999');
INSERT INTO public."Customer"(
	id, name, email, phone)
	VALUES (2, 'Viettel', 'vt@gmail.com', '0879999999');

INSERT INTO public."Category"(
	id, name)
	VALUES (1, 'Web App');
INSERT INTO public."Category"(
	id, name)
	VALUES (2, 'Software');
INSERT INTO public."Category"(
	id, name)
	VALUES (3, 'Servers');

INSERT INTO public."Label"(
	id, name,color)
	VALUES (1, 'Emergent','#123456');

INSERT INTO public."Label"(
	id, name,color)
	VALUES (2, 'Critical','#ffffff');

INSERT INTO public."Status"(
	id, name)
	VALUES (1, 'Doing');
INSERT INTO public."Status"(
	id, name)
	VALUES (2, 'Pending');
INSERT INTO public."Status"(
	id, name)
	VALUES (3, 'Done');
INSERT INTO public."Status"(
	id, name)
	VALUES (4, 'Process');
INSERT INTO public."Status"(
	id, name)
	VALUES (5, 'Ready for QA');
INSERT INTO public."Status"(
	id, name)
	VALUES (6, 'New');

INSERT INTO public."Project"(
	id, name, customer_id, category_id, createdby, starttime, endtime, description)
	VALUES (1, 'SpaceX', '1', '1', '2','2022-05-17 17:28:25-07', '2022-06-30 17:28:25-07', 'Calculation for space ship');


INSERT INTO public."Project"(
	id, name, customer_id, category_id, createdby, starttime, endtime, description)
	VALUES (2, 'VinID', '1', '2', '2','2022-05-17 17:28:25-07', '2022-06-30 17:28:25-07', 'Software for Vinhomes');

INSERT INTO public."Project"(
	id, name, customer_id, category_id, createdby, starttime, endtime, description)
	VALUES (3, 'Xander', '3', '3', '1','2022-05-17 17:28:25-07', '2022-06-30 17:28:25-07', 'Servers for some crazy guys');

INSERT INTO public."Task"(
	id, name, project_id, createdby, status_id, starttime, endtime, description)
	VALUES (1, 'Draw UI/homepage',1, '2', '6', '2022-05-17 17:28:25-07', '2022-06-30 17:28:25-07', 'Draw homepage include following components: header, footer');

INSERT INTO public."Task"(
	id, name, project_id, createdby, status_id, starttime, endtime, description)
	VALUES (2, 'Load image products', 2,1, 1, '2022-06-19 17:28:25', '2022-06-27 17:28:25', 'Load data from database');

INSERT INTO public."Task"(
	id, name, project_id, createdby, status_id, starttime, endtime, description)
	VALUES (3, 'Create scroll bar', 1,3, 2, '2022-06-19 17:28:25', '2022-06-27 17:28:25', 'import scroll bar lib');

INSERT INTO public."Task"(
	id, name, project_id, createdby, status_id, starttime, endtime, description)
	VALUES (4, 'Config security', 3,1, 1, '2022-06-19 17:28:25', '2022-06-27 17:28:25', 'generate secret key and config');	

INSERT INTO public."Comment"(
	id, user_id, task_id, content)
	VALUES (1,2, 1, 'LGTM');

INSERT INTO public."Comment"(
	id, user_id, task_id, content)
	VALUES (2, 3, 3, 'low performance');

INSERT INTO public."File"(
	id, name, size, url, task_id)
	VALUES (1, 'image-ship', 500, 'https://addons-media.operacdn.com/media/CACHE/images/themes/35/36135/1.0-rev1/images/452dc38c-2d59-4eaf-8ab0-aeee95122290/4c067f7ecdd2f83ed965904eaf65bda5.jpg', 1);	

INSERT INTO public."File"(
	id, name, size, url, task_id)
	VALUES (1, 'products', 600, 'https://vietradeportal.vn/product-la-gi/imager_24010.jpg', 3);

INSERT INTO public."EmployeeInProject"(
	id, user_id, project_id)
	VALUES (1, 1, 1);

INSERT INTO public."EmployeeInProject"(
	id, user_id, project_id)
	VALUES (2, 2, 1);